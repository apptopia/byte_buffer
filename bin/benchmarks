#!/usr/bin/env ruby

require "bundler/setup"
require "byte_buffer"
require "benchmark/ips"
require "ione"
require "cassandra"

def bm_allocation(buffer_class)
  buffer_class.new
end

def bm_churn(buffer_class)
  b = buffer_class.new
  s = 'X' * 200
  100.times {
    b.append(s)
    b.read(s.size)
  }
end

def bm_append_big(buffer_class)
  buffer = buffer_class.new
  100.times {
    buffer.append("HELLO" * 100)
  }
  buffer.to_str
end

def bm_append_small(buffer_class)
  buffer = buffer_class.new
  100.times {
    buffer.append("HELLO")
  }
  buffer.to_str
end

def bm_append_int(buffer_class)
  buffer = buffer_class.new
  100.times {
    buffer.append_int(101)
  }
  buffer.to_str
end

def bm_append_long(buffer_class)
  buffer = buffer_class.new
  100.times {
    buffer.append_long(101)
  }
  buffer.to_str
end

def bm_append_double(buffer_class)
  buffer = buffer_class.new
  100.times {
    buffer.append_double(101.101)
  }
  buffer.to_str
end

def bm_read(buffer_class)
  buffer = buffer_class.new("ABCD" * 100)
  100.times {buffer.read(4)}
end

def bm_read_int(buffer_class)
  buffer = buffer_class.new("ABCD" * 100)
  100.times {buffer.read_int}
end

def bm_read_long(buffer_class)
  buffer = buffer_class.new("ABCDEFGH" * 100)
  100.times {buffer.read_long}
end

def bm_read_double(buffer_class)
  buffer = buffer_class.new("ABCDEFGH" * 100)
  100.times {buffer.read_double}
end

def run_benchmark(method, other_klass = Cassandra::Protocol::CqlByteBuffer, name_suffix = nil)
  name_a = ["#{method} - ByteBuffer::Buffer", name_suffix].compact.join(' ')
  name_b = ["#{method} - #{other_klass}", name_suffix].compact.join(' ')

  Benchmark.ips do |x|
    x.report(name_a) {send(method, ByteBuffer::Buffer)}
    x.report(name_b) {send(method, other_klass)}
    x.compare!
  end

  puts "\n\n"
end

run_benchmark(:bm_allocation, Ione::ByteBuffer)
run_benchmark(:bm_churn, Ione::ByteBuffer, 'space reuse, read/write interleaved')
run_benchmark(:bm_append_big, Ione::ByteBuffer, 'big strings')
run_benchmark(:bm_append_small, Ione::ByteBuffer, 'small strings')
run_benchmark(:bm_append_int)
run_benchmark(:bm_append_long)
run_benchmark(:bm_append_double)
run_benchmark(:bm_read)
run_benchmark(:bm_read_int)
run_benchmark(:bm_read_long)
run_benchmark(:bm_read_double)
